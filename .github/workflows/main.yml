name: Main
on:
  schedule:
    - cron: "5 5 * * TUE"
  workflow_dispatch:

jobs:
  refresh:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        volumes:
          - ./tables:/home/runner/work/rubygems-org-db-dumps/rubygems-org-db-dumps/tables
    env:
      PGHOST: localhost
      PGPORT: 5432
      PGUSER: postgres
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          persist-credentials: true
      - name: "Setup Ruby"
        uses: ruby/setup-ruby@v1.213.0
        with:
          ruby-version: 3.4.1
          bundler-cache: true
      - run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - run: |
          echo "dates=$(bundle exec backup.rb list)" >> $GITHUB_OUTPUT
        id: dates
      - run: bundle exec backup.rb download ${BACKUP_PATH}
        env:
          BACKUP_PATH: ${{ fromJson(steps.dates.outputs.dates)[0] }}
      - run: bundle exec backup.rb dump ${BACKUP_PATH}
        env:
          BACKUP_PATH: ${{ fromJson(steps.dates.outputs.dates)[0] }}
      - run: bundle exec backup.rb commit ${BACKUP_PATH}
        env:
          BACKUP_PATH: ${{ fromJson(steps.dates.outputs.dates)[0] }}
